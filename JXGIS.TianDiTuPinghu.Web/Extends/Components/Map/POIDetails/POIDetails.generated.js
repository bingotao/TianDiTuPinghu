// @hash v3-26A41C376695F96734EF0C6DA5609835C4479A36
// Automatically generated by ReactJS.NET. Do not edit, your changes will be overridden.
// Version: 3.0.1 (build 0) with Babel 6.7.7
// Generated at: 2017/5/3 14:46:59
///////////////////////////////////////////////////////////////////////////////
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var POIDetailImg = function (_React$Component) {
    _inherits(POIDetailImg, _React$Component);

    function POIDetailImg(props) {
        _classCallCheck(this, POIDetailImg);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(POIDetailImg).call(this, props));
    }

    _createClass(POIDetailImg, [{
        key: "onImgError",
        value: function onImgError() {
            this.refs.img.src = _bl_ + "/Reference/image/none-picture.png";
        }
    }, {
        key: "render",
        value: function render() {
            var img = this.props.imgUrl;
            return React.createElement("img", { ref: "img", onError: this.onImgError.bind(this), className: "poidetail-img", src: img });
        }
    }]);

    return POIDetailImg;
}(React.Component);

var POIDetailsPanel = function (_React$Component2) {
    _inherits(POIDetailsPanel, _React$Component2);

    function POIDetailsPanel() {
        _classCallCheck(this, POIDetailsPanel);

        var _this2 = _possibleConstructorReturn(this, Object.getPrototypeOf(POIDetailsPanel).call(this));

        _this2.state = {
            show: false
        };
        return _this2;
    }

    _createClass(POIDetailsPanel, [{
        key: "hidden",
        value: function hidden() {
            this.setState({ show: false });
            if (this.props.onHidden) {
                this.props.onHidden();
            }
        }
    }, {
        key: "showPOIDeails",
        value: function showPOIDeails(poi) {
            var item = poi || {};
            item.show = true;
            this.setState(item);
            _g.appCenter.hidden();
        }
    }, {
        key: "correcting",
        value: function correcting() {
            var map = this.props.map;
            var point = this.state.LNGLAT;
            var poi_id = this.state.FEATUREGUID;
            map.createCorrecting(point, poi_id);
        }
    }, {
        key: "componentDidMount",
        value: function componentDidMount() {
            var clipboard = new Clipboard(this.refs.copyAddress);

            clipboard.on('success', function (e) {
                _g.fun.showSuccess('分享地址复制成功！');
            });
        }
    }, {
        key: "getPosition",
        value: function getPosition() {
            var poi = this.state;
            return {
                name: poi.SHORTNAME,
                point: {
                    y: this.state.LNGLAT.lat,
                    x: this.state.LNGLAT.lng
                },
                center: false
            };
        }
    }, {
        key: "setRouteStart",
        value: function setRouteStart() {
            _g.appCenter.show('0');
            _g.routePlanning.setStart(this.getPosition());
        }
    }, {
        key: "setRouteEnd",
        value: function setRouteEnd() {
            _g.appCenter.show('0');
            _g.routePlanning.setEnd(this.getPosition());
        }
    }, {
        key: "render",
        value: function render() {
            var _this3 = this;

            var item = this.state;

            var images = item.PHOTO ? item.PHOTO.split(";") : [_bl_ + "/Reference/image/none-picture.png"];
            var imgs = [];

            for (var i = 0, l = images.length; i < l; i++) {
                imgs.push(React.createElement(
                    "div",
                    null,
                    React.createElement(POIDetailImg, { imgUrl: images[i] })
                ));
            }

            var address = window.location.origin + _bl_ + '/Map/Index?poishare=' + this.state.FEATUREGUID;
            return React.createElement(
                "div",
                { className: "poidetails-panel " + (item.show ? "active" : "") },
                React.createElement(
                    antd.Button,
                    { onClick: function onClick(e) {
                            return _this3.hidden();
                        }, type: "close", icon: "left" },
                    "返回"
                ),
                React.createElement(
                    antd.Carousel,
                    { autoplay: true, effect: "fade" },
                    imgs
                ),
                React.createElement(
                    "div",
                    { className: "poidetails-info" },
                    React.createElement(
                        "div",
                        null,
                        item.SHORTNAME
                    ),
                    React.createElement(
                        "div",
                        null,
                        React.createElement(antd.Icon, { type: "environment" }),
                        " ",
                        item.ADDRESS
                    ),
                    React.createElement(
                        "div",
                        null,
                        React.createElement(antd.Icon, { type: "phone" }),
                        " ",
                        item.PHONE
                    ),
                    React.createElement(
                        "div",
                        { className: "poidetails-route" },
                        React.createElement(
                            antd.Button,
                            { onClick: this.setRouteStart.bind(this), type: "primary" },
                            "从此出发",
                            React.createElement(antd.Icon, { type: "arrow-right" })
                        ),
                        React.createElement(
                            antd.Button,
                            { onClick: this.setRouteEnd.bind(this), type: "primary" },
                            "到达此处",
                            React.createElement(antd.Icon, { type: "arrow-left" })
                        )
                    )
                ),
                React.createElement(
                    "div",
                    { className: "poidetails-tools" },
                    React.createElement(
                        "span",
                        { onClick: function onClick(e) {
                                return _this3.props.map.createAreaSearch(_this3.state.LNGLAT);
                            } },
                        React.createElement(antd.Icon, { type: "search" }),
                        " 搜附近"
                    ),
                    React.createElement(
                        "span",
                        null,
                        React.createElement(
                            "button",
                            { ref: "copyAddress", "data-clipboard-text": address },
                            React.createElement(antd.Icon, { type: "share-alt" }),
                            " 分享"
                        )
                    ),
                    React.createElement(
                        "span",
                        { onClick: this.correcting.bind(this) },
                        React.createElement(antd.Icon, { type: "file-excel" }),
                        " 纠错"
                    )
                )
            );
        }
    }]);

    return POIDetailsPanel;
}(React.Component);