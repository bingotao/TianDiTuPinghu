// @hash v3-4919A4B20A2100E68C16568C208B0D7364AD12EF
// Automatically generated by ReactJS.NET. Do not edit, your changes will be overridden.
// Version: 3.0.1 (build 0) with Babel 6.7.7
// Generated at: 2017/5/3 14:46:58
///////////////////////////////////////////////////////////////////////////////
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var BusLine = function (_React$Component) {
    _inherits(BusLine, _React$Component);

    function BusLine() {
        _classCallCheck(this, BusLine);

        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(BusLine).call(this));

        _this.index = 1;
        return _this;
    }

    _createClass(BusLine, [{
        key: "render",
        value: function render() {
            var bl = this.props.busLine;
            var line = bl.Line;
            switch (bl.Type) {
                case 1:
                    return React.createElement(
                        "div",
                        { className: "busline-item" },
                        React.createElement("span", { className: "iconfont icon-iconfontjiaotongiconwalk" }),
                        "步行 ",
                        React.createElement(
                            "span",
                            { className: "enhance" },
                            line.Distance,
                            "(",
                            line.Time,
                            ")"
                        ),
                        " 到达 ",
                        React.createElement(
                            "span",
                            { className: "enhance" },
                            bl.EndStation.Name
                        )
                    );
                case 2:
                case 3:
                    return React.createElement(
                        "div",
                        { className: "busline-item" },
                        React.createElement(
                            "div",
                            { className: "enhance" },
                            React.createElement("span", { className: "iconfont icon-gongjiao" }),
                            line.Direction,
                            "(",
                            line.StationCount,
                            "站)"
                        ),
                        React.createElement(
                            "div",
                            { className: "busline-station" },
                            React.createElement(
                                "div",
                                null,
                                React.createElement("span", { className: "iconfont icon-station" }),
                                React.createElement(
                                    "span",
                                    null,
                                    bl.StartStation.Name
                                ),
                                React.createElement(
                                    "span",
                                    { className: "enhance" },
                                    " 上车"
                                )
                            ),
                            React.createElement(
                                "div",
                                null,
                                React.createElement("span", { className: "iconfont icon-station" }),
                                React.createElement(
                                    "span",
                                    null,
                                    bl.EndStation.Name
                                ),
                                React.createElement(
                                    "span",
                                    { className: "enhance" },
                                    " 下车"
                                )
                            ),
                            React.createElement(
                                "div",
                                { className: "enhance" },
                                "运营时间：",
                                line.WorkTime
                            )
                        )
                    );
                default:
                    return null;
            }
        }
    }]);

    return BusLine;
}(React.Component);

var BusPanning = function (_React$Component2) {
    _inherits(BusPanning, _React$Component2);

    function BusPanning(props) {
        _classCallCheck(this, BusPanning);

        var _this2 = _possibleConstructorReturn(this, Object.getPrototypeOf(BusPanning).call(this));

        _this2.state = {
            detailsOn: props.detailsOn
        };
        return _this2;
    }

    _createClass(BusPanning, [{
        key: "toggleDetails",
        value: function toggleDetails() {
            this.setState({
                detailsOn: !this.state.detailsOn
            });
        }
    }, {
        key: "render",
        value: function render() {
            var _this3 = this;

            var bp = this.props.busPanning;

            var trs = [];
            if (bp && bp.TransferBuses) {
                var trsBuses = bp.TransferBuses;
                for (var i = 0, l = trsBuses.length; i < l; i++) {
                    var item = trsBuses[i];
                    if (i != l - 1) trs.push(React.createElement(
                        "span",
                        null,
                        React.createElement(
                            "span",
                            null,
                            React.createElement("span", { className: "iconfont icon-gongjiao" }),
                            item
                        ),
                        " ",
                        React.createElement("span", { className: "iconfont icon-right" })
                    ));else trs.push(React.createElement(
                        "span",
                        null,
                        React.createElement(
                            "span",
                            null,
                            React.createElement("span", { className: "iconfont icon-gongjiao" }),
                            item
                        )
                    ));
                }

                var busLines = [];

                var lines = bp.BusLines;
                for (var i = 0, l = lines.length; i < l; i++) {
                    busLines.push(React.createElement(BusLine, { busLine: lines[i] }));
                }
            } else {
                bp = {};
            }

            return React.createElement(
                "div",
                { className: "bus-panning" + (this.state.detailsOn ? " active" : "") },
                React.createElement(
                    "div",
                    { onClick: function onClick(e) {
                            return _this3.props.parent.showDetails(_this3.props.index);
                        }, className: "bus-panning-sp" + (this.state.detailsOn ? " active" : "") },
                    React.createElement(
                        "span",
                        { className: "btn-buspanning-details" },
                        React.createElement(antd.Icon, { type: this.state.detailsOn ? "up" : "down" })
                    ),
                    React.createElement(
                        "div",
                        { className: "bus-panning-simple" },
                        trs
                    ),
                    React.createElement(
                        "div",
                        { className: "bus-panning-simple-detail" },
                        bp.TotalTime,
                        "(",
                        bp.TotalDistance,
                        "，",
                        bp.TransferCount == 0 ? "无换乘" : "换乘" + bp.TransferCount + "次",
                        ")"
                    )
                ),
                React.createElement(
                    "div",
                    { className: "bus-panning-details " + (this.state.detailsOn ? " active" : "") },
                    React.createElement(
                        "div",
                        { className: "bus-panning-details-start" },
                        React.createElement(antd.Icon, { type: "environment" }),
                        "起点"
                    ),
                    busLines,
                    React.createElement(
                        "div",
                        { className: "bus-panning-details-end" },
                        React.createElement(antd.Icon, { type: "environment" }),
                        "终点"
                    )
                )
            );
        }
    }]);

    return BusPanning;
}(React.Component);

var BusPanningResultPanel = function (_React$Component3) {
    _inherits(BusPanningResultPanel, _React$Component3);

    function BusPanningResultPanel(props) {
        _classCallCheck(this, BusPanningResultPanel);

        var _this4 = _possibleConstructorReturn(this, Object.getPrototypeOf(BusPanningResultPanel).call(this));

        _this4.parent = props.parent;
        _this4.state = {
            showDetailsIndex: 0
        };
        return _this4;
    }

    _createClass(BusPanningResultPanel, [{
        key: "showDetails",
        value: function showDetails(index) {
            this.setState({ showDetailsIndex: index });
        }
    }, {
        key: "drawPath",
        value: function drawPath(dp) {}
    }, {
        key: "render",
        value: function render() {
            var pgs = this.props.plannings;
            var plannings = [];
            if (pgs) {
                for (var i = 0, l = pgs.length; i < l; i++) {
                    plannings.push(React.createElement(BusPanning, { parent: this, index: i, detailsOn: this.state.showDetailsIndex === i, busPanning: pgs[i] }));
                }

                if (l === 0) {
                    plannings = React.createElement(
                        "div",
                        { className: "busplaning-nonetip" },
                        "未找到合适的公交线路"
                    );
                }
            } else {
                plannings = React.createElement("div", null);
            }
            return React.createElement(
                "div",
                null,
                plannings
            );
        }
    }]);

    return BusPanningResultPanel;
}(React.Component);