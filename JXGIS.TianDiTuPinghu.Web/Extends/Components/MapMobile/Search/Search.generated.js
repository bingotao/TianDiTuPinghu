// @hash v3-8E845316A43134C5C4B0DD28A9EAF2DB40D4E05A
// Automatically generated by ReactJS.NET. Do not edit, your changes will be overridden.
// Version: 3.0.1 (build 0) with Babel 6.7.7
// Generated at: 2017/5/3 14:47:01
///////////////////////////////////////////////////////////////////////////////
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var QuickSearch = function (_React$Component) {
    _inherits(QuickSearch, _React$Component);

    function QuickSearch() {
        _classCallCheck(this, QuickSearch);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(QuickSearch).call(this));
    }

    _createClass(QuickSearch, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var categories = [{ name: '餐饮美食', img: _bl_ + "/Reference/image/餐饮美食.png", codes: ['120201', '120202', "140312", "140310", "140311", "120204"] }, { name: '旅游住宿', img: _bl_ + "/Reference/image/旅游住宿.png", codes: ["120101", "120102", "120103"] }, { name: '交通运输', img: _bl_ + "/Reference/image/交通运输.png", codes: ["170801", "1701", "170401", "170501"] }, { name: '娱乐消费', img: _bl_ + "/Reference/image/娱乐消费.png", codes: ["13", "14", "15"] }, { name: '公共生活', img: _bl_ + "/Reference/image/公共生活.png", codes: ["160301", "160302", "160303", "160304", "150406"] }];
            var cCategories = [];

            for (var j = 0, l = categories.length; j < l; j++) {
                var i = categories[j];
                cCategories.push(React.createElement(
                    'div',
                    { onClick: function (i) {
                            _this2.props.search.searchOnResultPanel(null, i.codes);
                            _this2.props.search.props.resultPanel._target = "search";
                        }.bind(this, i) },
                    React.createElement('img', { src: i.img }),
                    React.createElement(
                        'div',
                        null,
                        i.name
                    )
                ));
            }

            return React.createElement(
                'div',
                { className: 'quick-search' },
                React.createElement(
                    'div',
                    { style: { width: "300px", margin: "0 auto" } },
                    cCategories
                )
            );
        }
    }]);

    return QuickSearch;
}(React.Component);

var QuickSearchResults = function (_React$Component2) {
    _inherits(QuickSearchResults, _React$Component2);

    function QuickSearchResults() {
        _classCallCheck(this, QuickSearchResults);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(QuickSearchResults).call(this));
    }

    _createClass(QuickSearchResults, [{
        key: 'scrollTop',
        value: function scrollTop() {
            this.refs.panel.scrollTop = 0;
        }
    }, {
        key: 'render',
        value: function render() {
            var _this4 = this;

            var items = this.props.items;
            var cItems = [];
            if (items && items.length) for (var j = 0, l = items.length; j < l; j++) {
                i = items[j];
                cItems.push(React.createElement(
                    'div',
                    { onClick: function (i) {
                            var resultPanel = _this4.props.resultPanel;
                            resultPanel.state.results = [i];
                            resultPanel.addPOIToMap([i], true);
                            resultPanel.setActivePOI(i.FEATUREGUID);
                            resultPanel.show(true);
                            resultPanel._target = "search";
                            _this4.props.search.hidden();
                        }.bind(this, i), className: 'quick-result' },
                    React.createElement('span', { className: 'anticon anticon-environment-o' }),
                    i.SHORTNAME
                ));
            }
            return React.createElement(
                'div',
                { ref: 'panel', className: 'quick-search-results' },
                cItems
            );
        }
    }]);

    return QuickSearchResults;
}(React.Component);

var Search = function (_React$Component3) {
    _inherits(Search, _React$Component3);

    function Search(props) {
        _classCallCheck(this, Search);

        var _this5 = _possibleConstructorReturn(this, Object.getPrototypeOf(Search).call(this));

        _this5.state = {
            visible: false,
            results: null,
            btnClearVisible: false,
            searchText: ""
        };
        props.resultPanel.parent = _this5;
        return _this5;
    }

    _createClass(Search, [{
        key: 'btnClick',
        value: function btnClick() {
            this.search();
            this.props.resultPanel._target = "search";
        }
    }, {
        key: 'searchOnResultPanel',
        value: function searchOnResultPanel(keyword, categories) {
            this.props.resultPanel.search(keyword || this.state.searchText, categories);
        }
    }, {
        key: 'search',
        value: function search(keyword, categories) {
            var keyWord = keyword || this.state.searchText;
            keyWord = keyWord.trim();
            var cThis = this;
            $.post('SearchPOI', { keywords: keyWord.split(' '), types: categories, pagenumber: 1, pagesize: 20 }, function (rt) {
                if (rt.ErrorMessage) {
                    antd.Toast.fail(rt.ErrorMessage);
                } else {
                    var data = rt.Data.Data;
                    var results = rt.Data.Data.Results;
                    cThis.setState({ results: results });
                }
            }, 'json');
        }
    }, {
        key: 'show',
        value: function show(clear) {
            var obj = { visible: true };
            if (clear) {
                obj.searchText = "";
                obj.results = [];
            }
            this.setState(obj);
        }
    }, {
        key: 'hidden',
        value: function hidden(clear) {
            var obj = { visible: false };
            if (clear) {
                obj.searchText = "";
                obj.results = [];
                this.props.resultPanel.clearPOILayer(false, true);
            }
            this.setState(obj);
        }
    }, {
        key: 'toggleClearBtn',
        value: function toggleClearBtn() {
            this.setState({
                btnClearVisible: !this.state.btnClearVisible
            });
        }
    }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate() {
            this.refs.panel.scrollTop();
        }
    }, {
        key: 'render',
        value: function render() {
            var _this6 = this;

            return React.createElement(
                'div',
                { className: "search " + (this.state.visible ? "active" : "") },
                React.createElement(
                    'div',
                    { className: 'search-group' },
                    React.createElement(antd.Icon, { onClick: function onClick(e) {
                            return _this6.hidden(true);
                        }, className: 'btn-fallback', type: 'left' }),
                    React.createElement(antd.SearchBar, { value: this.state.searchText,
                        placeholder: '搜索',
                        onSubmit: function onSubmit(e) {
                            return _this6.searchOnResultPanel(e);
                        },
                        onChange: function onChange(e) {
                            _this6.setState({ searchText: e });_this6.search(e);
                        },
                        cancelText: "搜索",
                        onCancel: function onCancel(e) {
                            return _this6.searchOnResultPanel(e);
                        } })
                ),
                React.createElement(QuickSearch, { search: this }),
                React.createElement(QuickSearchResults, { search: this, resultPanel: this.props.resultPanel, ref: 'panel', items: this.state.results })
            );
        }
    }]);

    return Search;
}(React.Component);

var ResultPanel = function (_React$Component4) {
    _inherits(ResultPanel, _React$Component4);

    function ResultPanel(props) {
        _classCallCheck(this, ResultPanel);

        var _this7 = _possibleConstructorReturn(this, Object.getPrototypeOf(ResultPanel).call(this));

        _this7.keyWord = '';
        _this7.categories = [];
        _this7.state = {
            visible: false,
            slided: false,
            currentPage: 0,
            total: 0,
            results: []
        };
        _this7.map = props.map;

        var icons = _this7.map.icons;
        var poiLayer = L.geoJSON(null);

        poiLayer.on('click', function (e) {
            this.show(true);
            this.setActivePOI(e.layer.feature.properties.FEATUREGUID);
        }.bind(_this7));
        var poiLayer = poiLayer.addTo(map.map);
        _this7.map.poiLayer = poiLayer;
        return _this7;
    }

    _createClass(ResultPanel, [{
        key: 'fallbackClick',
        value: function fallbackClick() {
            if (this._target == 'search') {
                this.parent.show();
            } else {
                this.areaSearch.show();
            }
            this.hidden(false, false);
        }
    }, {
        key: 'setActivePOI',
        value: function setActivePOI(ftId, scrollTop) {
            var icons = this.map.icons;
            if ((ftId == null || ftId == undefined) && this.state.results.length) ftId = this.state.results[0];
            if (ftId) {
                this.map.poiLayer.eachLayer(function (layer) {
                    if (layer.feature.properties.FEATUREGUID == ftId) {
                        layer.setIcon(icons.poiactive);
                        layer.setZIndexOffset(99999);
                    } else {
                        layer.setZIndexOffset(1);
                        layer.setIcon(icons.poidefault);
                    }
                });

                var results = this.state.results;
                for (var i = 0, l = results.length; i < l; i++) {
                    var r = results[i];
                    r.active = false;
                    if (r.FEATUREGUID == ftId) {
                        r.active = true;
                        if (scrollTop !== false) this.refs.panel.scrollTop = i * 132;
                    }
                }
                this.setState({
                    results: results
                });
            }
        }
    }, {
        key: 'toggleSlided',
        value: function toggleSlided() {
            this.setState({
                visible: true,
                slided: !this.state.slided
            });
        }
    }, {
        key: 'clearPOILayer',
        value: function clearPOILayer() {
            this.map.poiLayer.clearLayers();
        }
    }, {
        key: '_onGoToHereClick',
        value: function _onGoToHereClick(poi) {
            this.hidden(false, true);
            if (this.props.onGoToHereClick) {
                this.props.onGoToHereClick(poi);
            }
        }
    }, {
        key: 'addPOIToMap',
        value: function addPOIToMap(pois, fit) {
            var newPOIs = [];
            this.clearPOILayer();

            var poiLayer = this.map.poiLayer;
            for (var i = 0, l = pois.length; i < l; i++) {
                var poi = pois[i];
                poi.INDEX = i;
                newPOIs.push({
                    type: "Feature",
                    properties: poi,
                    geometry: {
                        type: "Point",
                        coordinates: [poi.X, poi.Y]
                    }
                });
            }
            poiLayer.addData(newPOIs);

            if (fit) {
                if (newPOIs.length > 1) {
                    bounds = poiLayer.getBounds();
                    this.map.map.fitBounds(bounds, { paddingTopLeft: [10, 70], paddingBottomRight: [10, 200] });
                } else if (newPOIs.length == 1) {
                    this.map.map.setView([pois[0].Y, pois[0].X]);
                }
            }
        }
    }, {
        key: 'search',
        value: function search(keyword, categories, pagenumber, latlng) {
            this.keyWord = keyword || this.keyWord;
            this.categories = categories || this.categories;
            this.keyWord = this.keyWord.trim();
            this.latlng = latlng || this.latlng;
            var pageNumber = pagenumber ? pagenumber : 0;

            var postObj = {
                keywords: this.keyWord.split(' '),
                types: this.categories,
                pagenumber: pageNumber + 1,
                pagesize: 10
            };

            if (this.latlng) {
                postObj.centerpoint = this.latlng;
                postObj.radius = 1000;
            }
            var cThis = this;
            $.post('SearchPOI', postObj, function (rt) {
                if (rt.ErrorMessage) {
                    antd.Toast.fail(rt.ErrorMessage);
                } else {
                    var data = rt.Data.Data;
                    var results = rt.Data.Data.Results;
                    cThis.setState({ currentPage: pageNumber, total: data.Count, results: results });
                    cThis.addPOIToMap(results, true);
                    if (results.length) {
                        cThis.setActivePOI(results[0].FEATUREGUID);
                    }

                    cThis.parent.hidden(false);
                    cThis.show();
                }
            }, 'json');
        }
    }, {
        key: 'show',
        value: function show(slided) {
            this.setState(slided ? { visible: true, slided: true } : { visible: true, slided: false });
        }
    }, {
        key: 'scrollTop',
        value: function scrollTop() {
            this.refs.panel.scrollTop = 0;
        }
    }, {
        key: 'hidden',
        value: function hidden(slided, clear) {
            if (slided) {
                this.setState({ visible: true, slided: true });
            } else {
                this.keyWord = "";
                this.categories = [];
                this.latlng = null;
                this.setState({
                    visible: false,
                    slided: false,
                    currentPage: 0,
                    total: 0,
                    results: []
                });
                if (!!clear) {
                    this.parent.hidden(true);
                    this.map.poiLayer.clearLayers();
                }
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this8 = this;

            var state = this.state;
            var results = state.results;
            var cResults = [];
            for (var i = 0, l = results.length; i < l; i++) {

                var r = results[i];
                cResults.push(React.createElement(ResultItem, { parent: this, item: r }));
            }

            var cNoneFind = React.createElement(
                'div',
                { className: 'result-panel-nonefind' },
                '未找到相关信息'
            );
            return React.createElement(
                'div',
                { className: "result-panel " + (state.visible ? 'active ' : '') + (state.slided ? 'slided' : '') },
                React.createElement(
                    'div',
                    { className: 'result-panel-actions' },
                    React.createElement(antd.Icon, { onClick: function onClick(e) {
                            return _this8.fallbackClick();
                        }, type: 'arrow-left' }),
                    React.createElement(antd.Icon, { onClick: this.toggleSlided.bind(this), type: state.slided ? "caret-up" : "caret-down" }),
                    React.createElement(antd.Icon, { onClick: function onClick(e) {
                            return _this8.hidden(false, true);
                        }, type: 'cross-circle' })
                ),
                React.createElement(
                    'div',
                    { ref: 'panel', className: 'result-panel-results' },
                    cResults.length > 0 ? cResults : cNoneFind,
                    React.createElement(antd.Pagination, { onChange: function onChange(e) {
                            return _this8.search(null, null, e, null);
                        },
                        style: { display: state.results.length > 1 ? "block" : "none", padding: "5px 20px" },
                        total: parseInt(state.total / 10) + (state.total % 10 > 0 ? 1 : 0),
                        current: state.currentPage,
                        prevText: '上一页',
                        nextText: '下一页' })
                )
            );
        }
    }]);

    return ResultPanel;
}(React.Component);

var ResultItem = function (_React$Component5) {
    _inherits(ResultItem, _React$Component5);

    function ResultItem() {
        _classCallCheck(this, ResultItem);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(ResultItem).call(this));
    }

    _createClass(ResultItem, [{
        key: 'error',
        value: function error() {
            this.refs.img.src = _bl_ + "/Reference/image/none-picture.png";
        }
    }, {
        key: 'render',
        value: function render() {
            var _this10 = this;

            var item = this.props.item;
            var imgs = item.PHOTO ? item.PHOTO.split(',') : [_bl_ + "/Reference/image/none-picture.png"];
            return React.createElement(
                'div',
                { onClick: function onClick(e) {
                        _this10.props.parent.hidden(true);
                        _this10.props.parent.props.map.map.setView([item.Y, item.X]);
                        _this10.props.parent.setActivePOI(item.FEATUREGUID, true);
                    },
                    className: "result-item " + (item.active ? "active" : "") },
                React.createElement(
                    'div',
                    null,
                    React.createElement(
                        'h3',
                        null,
                        item.SHORTNAME
                    ),
                    React.createElement(
                        'h4',
                        null,
                        React.createElement(antd.Icon, { type: 'environment' }),
                        item.ADDRESS || '暂无'
                    ),
                    React.createElement(
                        'h4',
                        null,
                        React.createElement(antd.Icon, { type: 'phone' }),
                        item.PHONE || '暂无'
                    ),
                    React.createElement(
                        antd.Button,
                        { onClick: function onClick(e) {
                                _this10.props.parent._onGoToHereClick(_this10.props.item);
                                e.stopPropagation();
                            }, type: 'ghost', size: 'small', inline: true },
                        '去这里'
                    ),
                    React.createElement(
                        antd.Button,
                        { onClick: function onClick(e) {
                                _this10.props.parent.areaSearch.show(item.SHORTNAME, { lng: item.X, lat: item.Y });
                                _this10.props.parent._target = "areasearch";
                            }, type: 'ghost', size: 'small', inline: true },
                        '搜周边'
                    )
                ),
                React.createElement('img', { onError: this.error.bind(this), ref: 'img', src: imgs[0] })
            );
        }
    }]);

    return ResultItem;
}(React.Component);